version: '3'
services:
  db:
    image: postgres:14.6-alpine
    container_name: db
    networks: 
      - net
    volumes:
      - ./data/db:/var/lib/postgresql/data 
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      

  api:
    build: 
      context: ./analyzer_service
      dockerfile: Dockerfile
    command: gunicorn  analyzer_service.wsgi:application --bind 0.0.0.0:8000
    restart: unless-stopped
    env_file:
      - ./analyzer_service/.env
    volumes:
      - ./analyzer_service:/analyzer_service
    networks: 
      - net
    ports:
      - 8000:8000
    container_name: api
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run serve
    restart: unless-stopped
    volumes:
      - ./frontend:/frontend
    networks: 
      - net
    ports:
      - 8080:8080
    container_name: frontend

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    container_name: redis
    networks: 
      - net

  worker:
    build:
      context: ./analyzer_service
    container_name: worker
    hostname: worker
    networks: 
      - net
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    links:
      - redis
    depends_on:
      - redis
      - db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  flower:
    build:
      context: ./analyzer_service
    hostname: flower
    ports:
      - 5555:5555
    networks: 
      - net
    container_name: flower
    entrypoint: celery
    command: -A celery_app.app flower --loglevel=info
    links:
      - redis
    depends_on:
      - redis

  scheduler:
    build:
      context: ./analyzer_service
    hostname: scheduler
    networks: 
      - net
    entrypoint: celery
    command: -A celery_app.app beat --loglevel=info
    container_name: scheduler
    
    links:
      - redis
    depends_on:
      - redis
      - worker


networks:
  net:
    driver: bridge